{"version":3,"sources":["scripts/app.js"],"names":["angular","module","acmeMalarkey","malarkey","linkFunc","scope","el","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","addClass","forEach","extraValues","value","type","pause","directive","restrict","template","link","$inject","MainController","GameModel","SweetAlert","moment","start","name","then","vm","phase","sendGuess","model","onSendGuessResponse","win","time","duration","format","message","num","join","swal","this","resetGuess","guessNext","controller","GameApi","$q","colors","isString","lenght","data","_model","key","game_key","guess","emptyGuesses","length","guessComplete","transformColors","reject","map","getCode","send","pastResults","past_results","reverse","getWinData","pastResult","guessAsArray","split","solved","time_taken","num_guesses","further_instructions","color","code","index","indexOf","EMPTY_GUESS","size","i","push","origin","css","service","$http","api","method","headers","Content-Type","url","concat","user","response","runBlock","$log","debug","run","constant","R","B","G","Y","O","P","C","M","config","$logProvider","debugEnabled"],"mappings":"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","file":"scripts/app-c3413ab7f4.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('mastermindUi', ['ngAria', 'oitozero.ngSweetAlert']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('mastermindUi')\n    .directive('acmeMalarkey', acmeMalarkey);\n\n  /** @ngInject */\n  function acmeMalarkey(malarkey) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        extraValues: '='\n      },\n      template: '&nbsp;',\n      link: linkFunc\n    };\n\n    return directive;\n\n    function linkFunc(scope, el) {\n      var typist = malarkey(el[0], {\n        typeSpeed: 40,\n        deleteSpeed: 40,\n        pauseDelay: 800,\n        loop: true,\n        postfix: ' '\n      });\n\n      el.addClass('acme-malarkey');\n\n      angular.forEach(scope.extraValues, function(value) {\n        typist.type(value).pause().delete();\n      });\n    }\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('mastermindUi')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController(GameModel, SweetAlert, moment) {\n    var vm = this;\n    vm.phase = 'welcome';\n    vm.start = start;\n    vm.model = GameModel;\n    vm.resetGuess = vm.model.resetGuess;\n    vm.guessNext = vm.model.guessNext;\n    vm.sendGuess = sendGuess;\n\n    function start(name) {\n      GameModel.start(name).then(function () {\n        vm.phase = 'playing';\n      });\n    }\n\n    function sendGuess() {\n      vm.model.sendGuess().then(onSendGuessResponse);\n    }\n\n    function onSendGuessResponse(model) {\n      if(model.win){\n        var time = moment.duration(model.win.time, 'seconds').format('mm:ss'),\n          message = ['You won with', model.win.num, 'guesses in', time, 'minutes'].join(' ');\n\n        SweetAlert.swal('Congrats!', message, 'success');\n      }\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('mastermindUi')\n    .service('GameModel', GameModel);\n\n  function GameModel(GameApi, $q, colors) {\n    var EMPTY_GUESS = {css: 'white'},\n      _model = {\n        pastResults: [],\n        win: false,\n        start: start,\n        resetGuess: resetGuess,\n        guessNext: guessNext,\n        sendGuess: sendGuess\n      };\n\n    return _model;\n\n    function start(name) {\n      if(!angular.isString(name) || name.lenght === 0) {\n        return $q.reject();\n      }\n\n      return GameApi.start(name)\n        .then(function (data) {\n          _model.key = data.game_key;\n\n          _model.guess = emptyGuesses(data.colors.length);\n          _model.guessComplete = false;\n          _model.colors = transformColors(data.colors);\n\n          return data;\n      });\n    }\n\n    function sendGuess() {\n      var key = _model.key,\n        guess = _model.guess\n          .map(getCode)\n          .join('');\n\n      return GameApi.send(key, guess)\n        .then(function (data) {\n          _model.pastResults = data.past_results.reverse();\n          _model.win = getWinData(data);\n          _model.guess = emptyGuesses(data.colors.length);\n          _model.guessComplete = false;\n          _model.pastResults.forEach(function (pastResult) {\n            var guessAsArray = pastResult.guess.split('');\n            pastResult.guess = transformColors(guessAsArray);\n          });\n\n          return _model;\n        });\n    }\n\n    function getWinData(data) {\n      if(data.solved === \"true\" || data.solved === true){ // workaround\n        return {\n          time: data.time_taken,\n          num: data.num_guesses,\n          message: data.further_instructions\n        };\n      }\n\n      return false;\n    }\n\n    function getCode(color) {\n      return color.code;\n    }\n\n    function guessNext(color) {\n      var index = _model.guess.indexOf(EMPTY_GUESS);\n      if(index === -1) {\n        return;\n      }\n\n      _model.guess[index] = color;\n      _model.guessComplete = _model.guess.indexOf(EMPTY_GUESS) === -1;\n\n    }\n\n    function resetGuess(index) {\n      _model.guessComplete = false;\n      _model.guess[index] = EMPTY_GUESS;\n    }\n\n    function emptyGuesses(size) {\n      var guess = [];\n\n      for(var i=0; i<size; i++){\n        guess.push(EMPTY_GUESS);\n      }\n\n      return guess;\n    }\n\n    function transformColors(origin) {\n      return origin.map(function (color) {\n        return {\n          code: color,\n          css: colors[color]\n        }\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('mastermindUi')\n    .service('GameApi', GameApi);\n\n  function GameApi($http, api) {\n    var service = {\n      start: start,\n      send: send\n    };\n\n    return service;\n\n    function start(name) {\n      return $http({\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        url: api.concat('/new_game'),\n        data: {\n          user: name\n        }\n      })\n      .then(function (response) {\n        return response.data;\n      });\n    }\n\n    function send(key, guess) {\n      return $http({\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        url: api.concat('/guess'),\n        data: {\n          code: guess,\n          game_key: key\n        }\n      })\n      .then(function (response) {\n        return response.data;\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('mastermindUi')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('mastermindUi')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment)\n    // .constant('api', 'https://192.168.100.10:8080/mastermind/v1')\n    // .constant('api', 'https://az-mastermind.herokuapp.com')\n    .constant('api', 'http://mastermind-pugstunt.herokuapp.com/mastermind/v1')\n    .constant('colors', {\n      R: 'red',\n      B: 'blue',\n      G: 'green',\n      Y: 'yellow',\n      O: 'orange',\n      P: 'purple',\n      C: 'cyan',\n      M: 'pink'\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('mastermindUi')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n  }\n\n})();\n"],"sourceRoot":"/source/"}